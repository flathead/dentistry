import { createToken } from '@/api-lib/db';
import { CONFIG as MAIL_CONFIG, sendMail } from '@/api-lib/mail';
import { auths } from '@/api-lib/middlewares';
import { getMongoDb } from '@/api-lib/mongodb';
import { ncOpts } from '@/api-lib/nc';
import nc from 'next-connect';

const handler = nc(ncOpts);

handler.use(...auths);

handler.post(async (req, res) => {
  if (!req.user) {
    res.json(401).end();
    return;
  }

  const db = await getMongoDb();

  const token = await createToken(db, {
    creatorId: req.user._id,
    type: 'emailVerify',
    expireAt: new Date(Date.now() + 1000 * 60 * 60 * 24),
  });

  await sendMail({
    to: req.user.email,
    from: MAIL_CONFIG.from,
    subject: `–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ Email –Ω–∞ —Å–∞–π—Ç–µ "${process.env.NEXT_PUBLIC_SITE_NAME}"`,
    html: `
      <div>
        <h2>–ü—Ä–∏–≤–µ—Ç, ${req.user.name}! üëã</h2>
		<p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ Email –í–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.</p>
		<br>
        <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ <a href="${process.env.NEXT_PUBLIC_WEB_URI}/verify-email/${token._id}">—ç—Ç–æ–π —Å—Å—ã–ª–∫–µ</a> —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–≤–æ—é –ø–æ—á—Ç—É.</p>
      </div>
      `,
  });

  res.status(204).end();
});

export default handler;
